---
/**
 * Dashboard Page - LumenOS Core
 *
 * The main application dashboard - completely separate from the landing page
 */

import DashboardComponent from '@/components/dashboard/Dashboard'
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dashboard - LumenOS</title>
    <meta name="description" content="Your personalized learning dashboard" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <!-- Preload critical resources -->
    <link rel="modulepreload" href="/src/components/dashboard/Dashboard.tsx" />
  </head>
  <body class="antialiased dashboard-page">
    <!-- Loading state while React hydrates -->
    <div id="dashboard-loading" class="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-purple-50 flex items-center justify-center">
      <div class="text-center">
        <div class="w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
        <p class="text-slate-600 font-medium">Loading your dashboard...</p>
      </div>
    </div>
    <DashboardComponent client:only="react" />
    <script>
      // Hide loading screen when dashboard mounts
      document.addEventListener('astro:page-load', () => {
        const loading = document.getElementById('dashboard-loading');
        if (loading) loading.style.display = 'none';
      });
    </script>
  </body>
</html>

<style is:global>
  /* Import Tailwind CSS */
  @import '../styles/global.css';

  /* Scoped styles - only apply to dashboard page */
  .dashboard-page {
    overflow-x: hidden;
  }

  /* Custom animations for dashboard */
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  .animate-fadeIn {
    animation: fadeIn 0.2s ease-out;
  }

  .animate-slideUp {
    animation: slideUp 0.3s ease-out;
  }

  .animate-float {
    animation: float 3s ease-in-out infinite;
  }

  .animation-delay-1000 {
    animation-delay: 1s;
  }

  .animation-delay-2000 {
    animation-delay: 2s;
  }

  .animation-delay-3000 {
    animation-delay: 3s;
  }

  /* 3D transforms for flashcards */
  .perspective-1000 {
    perspective: 1000px;
  }

  .transform-style-3d {
    transform-style: preserve-3d;
  }

  .backface-hidden {
    backface-visibility: hidden;
  }

  .rotate-y-180 {
    transform: rotateY(180deg);
  }

  /* Smooth scrollbar */
  .dashboard-page * {
    scrollbar-width: thin;
    scrollbar-color: #cbd5e1 #f1f5f9;
  }

  .dashboard-page *::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  .dashboard-page *::-webkit-scrollbar-track {
    background: #f1f5f9;
    border-radius: 10px;
  }

  .dashboard-page *::-webkit-scrollbar-thumb {
    background: #cbd5e1;
    border-radius: 10px;
  }

  .dashboard-page *::-webkit-scrollbar-thumb:hover {
    background: #94a3b8;
  }

  /* Widget content height - fixed to prevent overflow */
  .widget-content {
    overflow-y: auto;
    overflow-x: hidden;
    box-sizing: border-box;
  }

  /* Widget canvas container - MUST be positioned for absolute children */
  .widgets-canvas {
    position: relative;
    min-height: calc(100vh - 4rem);
  }

  /* Fix widget container sizing */
  .widget-container {
    box-sizing: border-box;
    overflow: hidden;
    border-radius: 1rem;
    user-select: none; /* Prevent text selection during drag */
  }
  
  /* Enable pointer events for dragging */
  .widget-container.cursor-grab,
  .widget-container.cursor-grabbing {
    cursor: grab;
  }
  
  .widget-container.cursor-grabbing {
    cursor: grabbing;
  }
  
  /* Make resize handle visible and interactive */
  .resize-handle {
    position: absolute;
    bottom: 0;
    right: 0;
    width: 20px;
    height: 20px;
    cursor: nwse-resize;
    z-index: 10;
  }

  .widget-container .widget-header {
    height: 52px;
    min-height: 52px;
    flex-shrink: 0;
  }

  /* Make sure widget content doesn't push boundaries */
  .widget-container .widget-content > * {
    max-width: 100%;
  }
</style>
